# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  imageRepo: $(dockerhub_repo)
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'eagunuworld_azureDevOps_cred_dockerhub'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/azure-aks.yaml'
        artifact: 'manifests'
        publishLocation: 'pipeline'

# resources:
# - repo: self

# stages:
# - stage: Build
#   displayName: Build image
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: ubuntu-latest
#     variables:
#        tags: $(Build.BuildId)

#     steps:

#     - task: Docker@2
#       displayName: Build an image
#       inputs:
#         containerRegistry: 'eagunuworld_az_cred_dockerhub'
#         repository: '$(repo)'
#         command: 'build'
#         Dockerfile: '**/Dockerfile'
#         buildContext: '$(System.DefaultWorkingDirectory)'
          


#     - task: CopyFiles@2
#       inputs:
#         Contents: 'eks-deploy-from-ecr.yaml'
#         TargetFolder: '$(build.artifactstagingdirectory)'
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#         ArtifactName: 'drop'
#         publishLocation: 'Container'
          
#     - task: ECRPushImage@1
#       inputs:
#         awsCredentials: '$(AWS_CREDENTIALS)'
#         regionName: '$(AWS_REGION)'
#         imageSource: 'imagename'
#         sourceImageName: '$(AWS_ECR_REPOSITORY_URI)'
#         sourceImageTag: '$(Build.BuildId)'
#         repositoryName: '$(AWS_ECR_REPOSITORY_NAME)'
#         pushTag: '$(Build.BuildId)'
        
        
